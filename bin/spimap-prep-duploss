#!/usr/bin/env python
# Make gene count matrix from a cluster/part file

# python imports
import sys, optparse
from itertools import izip

# rasmus imports
from rasmus import util, treelib

# compbio imports
from compbio import phylo


o = optparse.OptionParser()
o.set_defaults()

o.add_option("-s", "--stree", dest="stree",
             metavar="<species tree newick file>")
o.add_option("-S", "--smap", dest="smap",
             metavar="<gene to species file>")
o.add_option("-c", "--countmatrix", dest="countmatrix",
             metavar="<gene count matrix output file>")
o.add_option("-p", "--part", dest="partfile",
             metavar="<gene partition file>")
  

def error(message, exit=1):
    print >>sys.stderr, message
    sys.exit(exit)


def main(conf, args):

    # TODO: make more checks
    if conf.stree is None or conf.smap is None:
        error("error: must specify species tree and mapping")

    # read in species data
    stree = treelib.read_tree(conf.stree)
    gene2species = phylo.read_gene2species(conf.smap)
    species = stree.leaf_names()

    # open output
    if conf.countmatrix:
        out = open(conf.countmatrix, "w")
    else:
        out = sys.stdout
    

    # print header
    header = species
    out.write("\t".join(header) + "\n")


    for line in open(conf.partfile):
        row = line.rstrip().split("\t")
        counts = dict.fromkeys(species, 0)
        for gene in row:
            counts[gene2species(gene)] += 1

        out.write("\t".join(str(counts[sp]) for sp in species) + "\n")


conf, args = o.parse_args()
main(conf, args)

